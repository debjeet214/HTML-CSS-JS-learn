/* The translate() function moves the HTML element from its current position, in the X-Y plane. */
/* can use with single value */
tranform: translate(100px);
/* or with two values */
tranform: translate(100px, 50px);
/* and with negative values too */
tranform: translate(-100px, 50px);

/* The rotate() function rotates an element clockwise or counter-clockwise according to a given value in degree. */
/* can use positive value */
tranform: rotate(100deg);
/* can use negative value */
tranform: rotate(-100deg);

/* to resize the width or height */
* can use with single value */
tranform: scale(100%);
/* or with two values */
tranform: scale(100%, 50%);
/* and with negative values too */
tranform: scale(-10%, 50%);

scaleX() - Scales the width of the element.
scaleY() - Scales the height of the element.

/* The skew() function skews an element along the X and Y-axis by the given angles. Skew means a slant or an oblique 
angle and that is exactly how the HTML element appears when we apply this transform function on it. */
/* can use positive value */
tranform: skew(100deg);
/* can use negative value and two values too */
tranform: skew(-100deg, 50deg);
/*  */
/* Using this function, we can apply all the transformations mentioned above. Yes, scale, translate, skew, and rotate,
all these transformations can be applied to an HTML element using the matrix() function. */

transform: matrix(a, b, c, d, e, f);
a and d are the values for scaling the element's width and height. It's equivalent to the scale(a, d) function.
b and c are the values for skewing the element on the X-axis and Y-axis. It's equivalent to the skew(b, c) function.
e and f are the values for translating the element on the X-axis and Y-axis. It's equivalent to the translate(e, f)

For 3d change in the div, we can simply say it as roatet3d, scale3d, translate3d etc.
ex, transform : scale3d(10px , 30px, 100px);   (for x-axis, y-axis, z-axis);
to see live change you can add perspective function and in it we can add the different properties.
transform: perspective(distance) [translate3d() | rotate3() | scale3d() ... ];

/* The transform-origin property can be applied for both 2D and 3D transform functions. It enables us to change the position of the transformed element. */
/* using position attributes  */
transform-origin: left top;
/* using values  */
transform-origin: 0 10;
/* using mix  */
transform-origin: left 10;
/* or */
transform-origin: 0 top;
/* we can do it with one value or even with 3 values too */

transform-style is used to define how the child class will render.
transform-style: flat | preserve-3d; /* there are only 2 options */
/* The preserve-3d value allows the children of the elements to be positioned within the 3-dimensional plane.
The flat value will flatten the element in its parent's plane and will not allow them to be positioned along with the Z-axis.

In 3D transformation, the backface-visibility property is used to specify whether the backface of the element will be visible to the user or not. */
backface-visibility: visible | hidden; here is also twop options only
